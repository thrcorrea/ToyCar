// Code generated by mockery v2.16.0. DO NOT EDIT.

package cli

import mock "github.com/stretchr/testify/mock"

// Cli is an autogenerated mock type for the Cli type
type Cli struct {
	mock.Mock
}

type Cli_Expecter struct {
	mock *mock.Mock
}

func (_m *Cli) EXPECT() *Cli_Expecter {
	return &Cli_Expecter{mock: &_m.Mock}
}

// Start provides a mock function with given fields:
func (_m *Cli) Start() {
	_m.Called()
}

// Cli_Start_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Start'
type Cli_Start_Call struct {
	*mock.Call
}

// Start is a helper method to define mock.On call
func (_e *Cli_Expecter) Start() *Cli_Start_Call {
	return &Cli_Start_Call{Call: _e.mock.On("Start")}
}

func (_c *Cli_Start_Call) Run(run func()) *Cli_Start_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *Cli_Start_Call) Return() *Cli_Start_Call {
	_c.Call.Return()
	return _c
}

type mockConstructorTestingTNewCli interface {
	mock.TestingT
	Cleanup(func())
}

// NewCli creates a new instance of Cli. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCli(t mockConstructorTestingTNewCli) *Cli {
	mock := &Cli{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
